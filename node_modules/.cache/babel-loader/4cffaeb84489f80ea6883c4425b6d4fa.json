{"ast":null,"code":"var _jsxFileName = \"/Users/qinnuoli/Desktop/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    \"id\": 1,\n    \"text\": \"Doctors Appointment\",\n    \"day\": \"Feb 5th at 2:30pm\",\n    \"reminder\": true\n  }, {\n    \"id\": 2,\n    \"text\": \"Meeting at School\",\n    \"day\": \"Feb 6th at 1:30pm\",\n    \"reminder\": true\n  }, {\n    \"id\": 3,\n    \"text\": \"Food Shopping\",\n    \"day\": \"Feb 5th at 2:30pm\",\n    \"reminder\": false\n  }]); // add task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // delect task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eSn5xp7kgq7Ftm9SNP69aJbp+XE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/qinnuoli/Desktop/react-task-tracker/src/App.js"],"names":["Header","Tasks","useState","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAE,KAAF,CAA9C;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;AACI,UAAM,CADV;AAEI,YAAQ,qBAFZ;AAGI,WAAO,mBAHX;AAII,gBAAY;AAJhB,GADiC,EAOjC;AACI,UAAM,CADV;AAEI,YAAQ,mBAFZ;AAGI,WAAO,mBAHX;AAII,gBAAY;AAJhB,GAPiC,EAajC;AACI,UAAM,CADV;AAEI,YAAQ,eAFZ;AAGI,WAAO,mBAHX;AAII,gBAAY;AAJhB,GAbiC,CAAD,CAAlC,CAHa,CAwBf;;AACA,QAAMO,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AAEA,UAAMC,OAAO,GAAG;AAAEJ,MAAAA,EAAF;AAAM,SAAGD;AAAT,KAAhB;AACAF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,OAAX,CAAD,CAAR;AACD,GALD,CAzBe,CAgCd;;;AACA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzBH,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAjCc,CAqCd;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BH,IAAAA,QAAQ,CAACD,KAAK,CAACY,GAAN,CAAWT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWU,MAAAA,QAAQ,EAClE,CAACV,IAAI,CAACU;AADyC,KAAjB,GACZV,IADR,CAAD,CAAR;AAED,GAHD;;AAKC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMJ,cAAc,CAAC,CAACD,WAAF;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGGF,KAAK,CAACc,MAAN,GAAe,CAAf,gBAAoB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEd,KAAd;AAAqB,MAAA,QAAQ,EAAES,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAApB,GACC,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArDQd,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState } from 'react'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState (false)\n\n  const [tasks, setTasks] = useState([\n    {\n        \"id\": 1,\n        \"text\": \"Doctors Appointment\",\n        \"day\": \"Feb 5th at 2:30pm\",\n        \"reminder\": true\n    },\n    {\n        \"id\": 2,\n        \"text\": \"Meeting at School\",\n        \"day\": \"Feb 6th at 1:30pm\",\n        \"reminder\": true\n    },\n    {\n        \"id\": 3,\n        \"text\": \"Food Shopping\",\n        \"day\": \"Feb 5th at 2:30pm\",\n        \"reminder\": false\n    },\n])\n\n// add task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n // delect task\n const deleteTask = (id) => {\n   setTasks(tasks.filter((task) => task.id !== id))\n }\n\n // toggle reminder\n const toggleReminder = (id) => {\n   setTasks(tasks.map((task) => task.id === id ? { ...task, reminder:\n  !task.reminder} : task ))\n }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : (\n        'No Tasks To Show'\n      )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}